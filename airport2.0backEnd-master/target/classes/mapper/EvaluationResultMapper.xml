<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bjtu.recovery.mapper.EvaluationResultMapper">
    <resultMap id="BaseResultMap" type="com.bjtu.recovery.entity.EvaluationResult">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="filename" jdbcType="VARCHAR" property="filename"/>
        <result column="model" jdbcType="VARCHAR" property="model"/>
        <result column="flightId" jdbcType="INTEGER" property="flightId"/>
        <result column="allostate" jdbcType="INTEGER" property="allostate"/>
        <result column="parkinggate" jdbcType="VARCHAR" property="parkinggate"/>
        <result column="constraint1" jdbcType="INTEGER" property="constraint1"/>
        <result column="constraint2" jdbcType="INTEGER" property="constraint2"/>
        <result column="constraint3" jdbcType="INTEGER" property="constraint3"/>
        <result column="constraint4" jdbcType="INTEGER" property="constraint4"/>
        <result column="constraint5" jdbcType="INTEGER" property="constraint5"/>
        <result column="constraint6" jdbcType="INTEGER" property="constraint6"/>
        <result column="constraint7" jdbcType="INTEGER" property="constraint7"/>
        <result column="constraints" jdbcType="INTEGER" property="constraints"/>
        <result column="score" jdbcType="INTEGER" property="score"/>
        <result column="runnums" jdbcType="INTEGER" property="runnums"/>
        <result column="testtime" jdbcType="VARCHAR" property="testtime"/>
        <result column="userId" jdbcType="VARCHAR" property="userId"/>
        <result column="updateTime" jdbcType="VARCHAR" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, filename, model, flightId, allostate, parkinggate, constraint1, constraint2,
    constraint3, constraint4, constraint5, constraint6, `constraints`, score, runnums,
    testtime, userId, updateTime
  </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from EVALUATION_RESULT
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from EVALUATION_RESULT
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.bjtu.recovery.entity.EvaluationResult"
            useGeneratedKeys="true">
    insert into EVALUATION_RESULT (filename, model, flightId,
      allostate, parkinggate, constraint1,
      constraint2, constraint3, constraint4,
      constraint5, constraint6, constraint7,
      `constraints`,score, runnums, testtime,
      userId, updateTime)
    values (#{filename,jdbcType=VARCHAR}, #{model,jdbcType=VARCHAR}, #{flightId,jdbcType=INTEGER},
      #{allostate,jdbcType=INTEGER}, #{parkinggate,jdbcType=VARCHAR}, #{constraint1,jdbcType=INTEGER},
      #{constraint2,jdbcType=INTEGER}, #{constraint3,jdbcType=INTEGER}, #{constraint4,jdbcType=INTEGER},
      #{constraint5,jdbcType=INTEGER}, #{constraint6,jdbcType=INTEGER}, #{constraint7,jdbcType=INTEGER},
      #{constraints,jdbcType=INTEGER},#{score,jdbcType=INTEGER}, #{runnums,jdbcType=INTEGER}, #{testtime,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR}, #{updateTime,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.bjtu.recovery.entity.EvaluationResult" useGeneratedKeys="true">
        insert into EVALUATION_RESULT
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="filename != null">
                filename,
            </if>
            <if test="model != null">
                model,
            </if>
            <if test="flightId != null">
                flightId,
            </if>
            <if test="allostate != null">
                allostate,
            </if>
            <if test="parkinggate != null">
                parkinggate,
            </if>
            <if test="constraint1 != null">
                constraint1,
            </if>
            <if test="constraint2 != null">
                constraint2,
            </if>
            <if test="constraint3 != null">
                constraint3,
            </if>
            <if test="constraint4 != null">
                constraint4,
            </if>
            <if test="constraint5 != null">
                constraint5,
            </if>
            <if test="constraint6 != null">
                constraint6,
            </if>
            <if test="constraint7 != null">
                constraint7,
            </if>
            <if test="constraints != null">
                `constraints`,
            </if>
            <if test="score != null">
                score,
            </if>
            <if test="runnums != null">
                runnums,
            </if>
            <if test="testtime != null">
                testtime,
            </if>
            <if test="userId != null">
                userId,
            </if>
            <if test="updateTime != null">
                updateTime,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="filename != null">
                #{filename,jdbcType=VARCHAR},
            </if>
            <if test="model != null">
                #{model,jdbcType=VARCHAR},
            </if>
            <if test="flightId != null">
                #{flightId,jdbcType=INTEGER},
            </if>
            <if test="allostate != null">
                #{allostate,jdbcType=INTEGER},
            </if>
            <if test="parkinggate != null">
                #{parkinggate,jdbcType=VARCHAR},
            </if>
            <if test="constraint1 != null">
                #{constraint1,jdbcType=INTEGER},
            </if>
            <if test="constraint2 != null">
                #{constraint2,jdbcType=INTEGER},
            </if>
            <if test="constraint3 != null">
                #{constraint3,jdbcType=INTEGER},
            </if>
            <if test="constraint4 != null">
                #{constraint4,jdbcType=INTEGER},
            </if>
            <if test="constraint5 != null">
                #{constraint5,jdbcType=INTEGER},
            </if>
            <if test="constraint6 != null">
                #{constraint6,jdbcType=INTEGER},
            </if>
            <if test="constraint7 != null">
                #{constraint7,jdbcType=INTEGER},
            </if>
            <if test="constraints != null">
                #{constraints,jdbcType=INTEGER},
            </if>
            <if test="score != null">
                #{score,jdbcType=INTEGER},
            </if>
            <if test="runnums != null">
                #{runnums,jdbcType=INTEGER},
            </if>
            <if test="testtime != null">
                #{testtime,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.bjtu.recovery.entity.EvaluationResult">
        update EVALUATION_RESULT
        <set>
            <if test="filename != null">
                filename = #{filename,jdbcType=VARCHAR},
            </if>
            <if test="model != null">
                model = #{model,jdbcType=VARCHAR},
            </if>
            <if test="flightId != null">
                flightId = #{flightId,jdbcType=INTEGER},
            </if>
            <if test="allostate != null">
                allostate = #{allostate,jdbcType=INTEGER},
            </if>
            <if test="parkinggate != null">
                parkinggate = #{parkinggate,jdbcType=VARCHAR},
            </if>
            <if test="constraint1 != null">
                constraint1 = #{constraint1,jdbcType=INTEGER},
            </if>
            <if test="constraint2 != null">
                constraint2 = #{constraint2,jdbcType=INTEGER},
            </if>
            <if test="constraint3 != null">
                constraint3 = #{constraint3,jdbcType=INTEGER},
            </if>
            <if test="constraint4 != null">
                constraint4 = #{constraint4,jdbcType=INTEGER},
            </if>
            <if test="constraint5 != null">
                constraint5 = #{constraint5,jdbcType=INTEGER},
            </if>
            <if test="constraint6 != null">
                constraint6 = #{constraint6,jdbcType=INTEGER},
            </if>
            <if test="constraint7 != null">
                constraint7 = #{constraint7,jdbcType=INTEGER},
            </if>
            <if test="constraints != null">
                `constraints` = #{constraints,jdbcType=INTEGER},
            </if>
            <if test="runnums != null">
                runnums = #{runnums,jdbcType=INTEGER},
            </if>
            <if test="testtime != null">
                testtime = #{testtime,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                userId = #{userId,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.bjtu.recovery.entity.EvaluationResult">
    update EVALUATION_RESULT
    set filename = #{filename,jdbcType=VARCHAR},
      model = #{model,jdbcType=VARCHAR},
      flightId = #{flightId,jdbcType=INTEGER},
      allostate = #{allostate,jdbcType=INTEGER},
      parkinggate = #{parkinggate,jdbcType=VARCHAR},
      constraint1 = #{constraint1,jdbcType=INTEGER},
      constraint2 = #{constraint2,jdbcType=INTEGER},
      constraint3 = #{constraint3,jdbcType=INTEGER},
      constraint4 = #{constraint4,jdbcType=INTEGER},
      constraint5 = #{constraint5,jdbcType=INTEGER},
      constraint6 = #{constraint6,jdbcType=INTEGER},
      constraint7 = #{constraint7,jdbcType=INTEGER},
      `constraints` = #{constraints,jdbcType=INTEGER},
      runnums = #{runnums,jdbcType=INTEGER},
      testtime = #{testtime,jdbcType=VARCHAR},
      userId = #{userId,jdbcType=VARCHAR},
      updateTime = #{updateTime,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


    <select id="getinfo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from EVALUATION_RESULT
    </select>

    <select id="getFlightIdList" resultType="java.lang.String">
    select distinct flightId from EVALUATION_RESULT limit #{page},#{size}
  </select>

    <select id="getInfoWithParams" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from EVALUATION_RESULT
        <where>
            <if test="date!='' and date!=null">
                and updateTime = #{date}
            </if>
        </where>
    </select>

    <select id="getConstainsCount" resultType="com.bjtu.recovery.entity.vo.ConstrainsStatistic">
        select
           sum(constraints) as constrainsCount,model,date(updateTime ) as timePoint
        from EVALUATION_RESULT
        <where>
            <if test="startDate != '' and endDate != '' ">
                (date(updateTime) BETWEEN #{startDate} and #{endDate})
            </if>
            <if test="fileName != '' ">
                and filename = #{fileName}
            </if>
            <if test="userId != '' ">
                and userId = #{userId}
            </if>
        </where>
        group by model,timePoint
        order by timePoint asc
  </select>

    <select id="getFlightConstraintSum" resultType="com.bjtu.recovery.entity.vo.ConstraintSum">
        select
            sum(constraint1) as constraint1,sum(constraint2) as constraint2,sum(constraint3) as constraint3,
            sum(constraint4) as constraint4,sum(constraint5) as constraint5,sum(constraint6) as constraint6,
            model
         from EVALUATION_RESULT
        <where>
            <if test="startDate != '' and endDate != '' ">
                (date(updateTime) BETWEEN #{startDate} and #{endDate})
            </if>

            <if test="fileName != '' ">
                and filename = #{fileName}
            </if>
            <if test="userId != '' ">
                and userId = #{userId}
            </if>
        </where>
        group by model
        order by model
    </select>
</mapper>
